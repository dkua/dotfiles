#!/bin/bash

source $HOME/.profile

# Find bash completion directory
bash=${BASH_VERSION%.*}; bmajor=${bash%.*}
if [[ $bmajor -gt 2 ]]; then
    if hash brew 2>/dev/null; then
        export BASH_COMPLETION_DIR=$(brew --prefix)/etc/bash_completion.d
        . $(brew --prefix)/etc/bash_completion
    else
        if [[ -f /etc/bash_completion ]]; then
            if [[ -z "$BASH_COMPLETION" ]]; then
                BASH_COMPLETION=/etc/bash_completion
                export BASH_COMPLETION
            fi
            if [[ -z "$BASH_COMPLETION_DIR" ]]; then
                BASH_COMPLETION_DIR=/etc/.bash_completion.d
                export BASH_COMPLETION_DIR
            fi
            . /etc/bash_completion
        fi
    fi  
    unset bash bmajor
fi

# Responsive Prompt
parse_git_branch() {
    echo `__git_ps1 "%s"`
}

working_directory() {
    dir=`pwd`
    in_home=0
    if [[ `pwd` =~ ^"$HOME"(/|$) ]]; then
        dir="~${dir#$HOME}"
        in_home=1
    fi

    workingdir=""
    if [[ `tput cols` -lt 110 ]]; then
        first="/`echo $dir | cut -d / -f 2`"
        letter=${first:0:2}
        if [[ $in_home == 1 ]]; then
            letter="~$letter"
        fi
        proj=`echo $dir | cut -d / -f 3`
        beginning="$letter/$proj"
        end=`echo "$dir" | rev | cut -d / -f1 | rev`

        if [[ $proj == "" ]]; then
            workingdir="$dir"
        elif [[ $proj == "~" ]]; then
            workingdir="$dir"
        elif [[ $dir =~ "$first/$proj"$ ]]; then
            workingdir="$beginning"
        elif [[ $dir =~ "$first/$proj/$end"$ ]]; then
            workingdir="$beginning/$end"
        else
            workingdir="$beginning/…/$end"
        fi
    else
        workingdir="$dir"
    fi

    echo -e "${YELLOW}$workingdir${COLOREND} "
}

parse_remote_state() {
    remote_state=$(git status -sb 2> /dev/null | grep -oh "\[.*\]")
    echo $remote_state
}

prompt() {
    if [[ $? -eq 0 ]]; then
        exit_status="${BLUE}›${COLOREND} "
    else
        exit_status="${RED}›${COLOREND} "
    fi

    PS1="$(working_directory)$(parse_git_branch)$(parse_remote_state)$exit_status"
}
PROMPT_COMMAND=prompt
. "$HOME/.cargo/env"
